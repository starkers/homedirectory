zmodload zsh/zprof

export TERM="xterm-256color"
HIST_STAMPS="yyyy-mm-dd"
unsetopt share_history

export EDITOR=vim
export LS_COLORS

function my_load_profile(){
  source ~/.profile
}

function my_load_aliases(){
  source ~/.aliases
}

function my_load_shell_functions(){
  source ~/.shell_functions
}

function fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}

function my_nvm_load(){
  source /usr/share/nvm/init-nvm.sh
}

function my_load_direnv(){
  hash direnv 2>/dev/null && eval "$(direnv hook zsh)"
}

function my_load_fzf(){
  source ~/.fzf/shell/completion.zsh
  source ~/.fzf/shell/key-bindings.zsh
}

function my_load_vte(){
  if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
    [ -e /etc/profile.d/vte.sh ] && source /etc/profile.d/vte.sh
  fi
}

function my_load_keybase_stuff(){
  KB_USER=starkers
  KB_PLACE=/keybase/private/${KB_USER}/home/shell
  if [ -d ${KB_PLACE} ]; then
    source ${KB_PLACE}/*-profile.sh
  fi
  export PATH=/keybase/private/starkers/scripts:${PATH}
  export CHEATPATH="/keybase/private/starkers/home/cheats"
}



# export SDKMAN_DIR="${HOME}/.sdkman"
# [[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"

# export ZSH_CUSTOM="${HOME}/.zsh_custom"

# Just comment a section if you want to disable it
SPACESHIP_PROMPT_ORDER=(
  # time        # Time stampts section (Disabled)
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  # hg            # Mercurial section (hg_branch  + hg_status)
  # package     # Package version (Disabled)
  # node          # Node.js section
  # ruby          # Ruby section
  # elixir        # Elixir section
  # xcode       # Xcode section (Disabled)
  # swift         # Swift section
  # golang        # Go section
  # php           # PHP section
  # rust          # Rust section
  # haskell       # Haskell Stack section
  # julia       # Julia section (Disabled)
  # docker      # Docker section (Disabled)
  aws           # Amazon Web Services section
  venv          # virtualenv section
  # conda         # conda virtualenv section
  # pyenv         # Pyenv section
  # dotnet        # .NET section
  # ember       # Ember.js section (Disabled)
  # kubecontext   # Kubectl context section
  exec_time     # Execution time
  line_sep      # Line break
  # battery       # Battery level and status
  # vi_mode     # Vi-mode indicator (Disabled)
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)

# SPACESHIP_VENV_SYMBOL='üêç'

SPACESHIP_KUBECONTEXT_COLOR_GROUPS=(
  # red if namespace is "kube-system"
  red    '\(prod)$'
  # else, green if "dev-01" is anywhere in the context or namespace
  green  '\(dev|preview|demo)$'
  # else, red if context name ends with ".k8s.local" _and_ namespace is "system"
  # red    '\.k8s\.local \(system)$'
  # else, yellow if the entire content is "test-" followed by digits, and no namespace is displayed
  blue '^.*$'
  )


# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
#   # context
#   # time
#   aws
#   dir
#   vcs
#   virtualenv
#   command_execution_time
#   newline
#   status
#   )

# POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
#   kubecontext
#   # root_indicator
#   # battery
#   # background_jobs
#   # history
#   # time
#   )

# POWERLEVEL9K_SHORTEN_DIR_LENGTH=5
# POWERLEVEL9K_SHORTEN_DELIMITER=""
# POWERLEVEL9K_SHORTEN_STRATEGY="truncate_from_right"

# POWERLEVEL9K_BATTERY_STAGES="‚ñÅ‚ñÇ‚ñÉ‚ñÑ‚ñÖ‚ñÜ‚ñá‚ñà"

if [[ -o interactive ]]; then

  zle -N fancy-ctrl-z
  bindkey '^Z' fancy-ctrl-z
  zstyle ":completion:*:commands" rehash 1
  bindkey '^W' vi-backward-kill-word

  ####################################################
  ## theming etc
  source ~/.antigen.zsh
  antigen use oh-my-zsh

  antigen bundle docker
  antigen bundle docker-compose
  antigen bundle git
  antigen bundle git-flow
  antigen bundle golang
  antigen bundle gpg-agent
  antigen bundle history
  antigen bundle httpie
  # antigen bundle kubectl
  antigen bundle pip
  antigen bundle systemd
  antigen bundle virtualenv
  antigen bundle z
  antigen bundle zsh-users/zsh-autosuggestions
  antigen bundle zsh-users/zsh-completions
  antigen bundle zsh-users/zsh-syntax-highlighting

  fpath=(~/.zsh/completions $fpath)
  plugins=(docker docker-compose go golang kubectl z zsh-completions)
  # this is required so `docker exec -it <TAB>` works.. see: https://github.com/moby/moby/commit/402caa94d23ea3ad47f814fc1414a93c5c8e7e58
  zstyle ':completion:*:*:docker:*' option-stacking yes
  zstyle ':completion:*:*:docker-*:*' option-stacking yes

  antigen theme https://github.com/denysdovhan/spaceship-prompt spaceship
  antigen apply
  ####################################################

  my_load_aliases
  my_load_direnv
  my_load_fzf
  my_load_keybase_stuff
  my_load_profile
  my_load_shell_functions
  my_load_vte


fi


export JAVA_HOME=/usr/lib/jvm/default/
export PATH="${GOPATH}/bin:${PATH}"
export PATH="${HOME}/.bin:${PATH}"
export PATH="${HOME}/.local/bin:${PATH}"
export PATH="${HOME}/.software/bin:${PATH}"
export PATH="${HOME}/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:${PATH}"
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

[ -e ${HOME}/.sdkman/bin/sdkman-init.sh ] && source "$HOME/.sdkman/bin/sdkman-init.sh"

export KUBECONFIG="${HOME}/.kube/config"
