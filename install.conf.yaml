---
- defaults:
    link:
      create: true
      relink: true

# #directories to be cleaned (dead symlinks removed)
- clean: ['~']

- shell:
# - [git submodule update --init --recursive, Installing submodules]
  - mkdir -p ~/.config/mc
  - cp -rvp mc/* ~/.config/mc/.
  # destroy these directories if they exist already
# - D="${HOME}/.ssh" ; if [ -d "${D}" ]; then ; rm -rf "${D}" ; fi

- link:
#   ~/.ssh:                   '/keybase/private/starkers/home/ssh'
    ~/.gitconfig:             'gitconfig'



############## MISC

- link:
    ~/.bin:                   'bin'              #scripts and general "helpers"
    ~/.config/terminator:     'terminator'
    ~/.digrc:                 'digrc'
    ~/.screenrc:              'screenrc'

############# Secrets Et-al
    ~/.aws:                   '/keybase/private/starkers/home/aws'              #sensitive
    ~/.cheat:                 '/keybase/private/starkers/home/cheats'
    ~/.kube:                  '/keybase/private/starkers/home/kube'
    ~/.mutt:                  '/keybase/private/starkers/home/mutt'
    ~/.muttrc:                '/keybase/private/starkers/home/muttrc'
    ~/.weechat:               '/keybase/private/starkers/home/weechat'
    ~/Notes:                  '/keybase/private/starkers/home/notes'

######### ZSH + BASH
- shell:
  - F="${HOME}/.bashrc" ; if [ -f "${F}" ]; then ; rm -f "${F}" ; fi
  - F="${HOME}/.fzf.bash" ; if [ -f "${F}" ]; then ; rm -f "${F}" ; fi
  - F="${HOME}/.fzf.zsh" ; if [ -f "${F}" ]; then ; rm -f "${F}" ; fi
  - F="${HOME}/.zshrc" ; if [ -f "${F}" ]; then ; rm -f "${F}" ; fi

- link:
    ~/.aliases:               'aliases'
    ~/.bashrc:                'bashrc'
    ~/.bashrc_git:            'git-prompt.sh'
    ~/.fzf.bash:              'fzf.bash'
    ~/.fzf.zsh:               'fzf.zsh'
    ~/.profile:               'profile'
    ~/.shell_functions:       'shell_functions'
    ~/.zshrc:                 'zshrc'

######### FONTS
- shell:
  - D="${HOME}/.config/fontconfig" ; if [ -d "${D}" ]; then ; rm -rf "${D}" ; fi
- link:
    ~/.local/share/fonts:     'fonts'
    ~/.config/fontconfig:     'fontconfig'



######### i3 + co
- shell:
  - D="${HOME}/.config/autostart" ; if [ -d "${D}" ]; then ; rm -rf "${D}" ; fi
  - F="${HOME}/.config/compton.conf" ; if [ -f "${F}" ]; then ; rm -f "${F}" ; fi
  - D="${HOME}/.config/i3" ; if [ -d "${D}" ]; then ; rm -rf "${D}" ; fi
- link:
#     ~/.tmux.conf:             'tmux'
    # ~/.local/share/mc/skins:  'mc-skins'
    ~/.config/autostart:      'autostart'
    ~/.config/i3:             'i3-gaps'
    ~/.config/i3blocks:       'i3blocks'
    ~/.config/compton.conf:   'compton.conf'
    ~/.config/dunst:          'dunst'
    ~/.xinitrc:               'xinitrc'
#
# - shell:
#   - mkdir -p ~/.local/share/applications
#   - cp -rvp applications/* ~/.local/share/applications/.
#
- shell:
#   - mkdir -p ~/.mutt/cache/headers
#   - mkdir -p ~/.mutt/cache/bodies
#   - chmod 0700 ~/.mutt/cache/headers
#   - chmod 0700 ~/.mutt/cache/bodies
#   - mkdir -p ~/.weechat/logs
  - mkdir -p ~/.ssh
  - cp -R /keybase/private/starkers/home/ssh/* ~/.ssh/.
  - chmod 0700 ~/.ssh/
  - chmod 0600 ~/.ssh/id_*
  - [git submodule update --init --recursive, Installing submodules]


## VIM
- shell:
  - D="${HOME}/.local/share/nvim" ; if [ -d "${D}" ]; then ; rm -rf "${D}" ; fi
- link:
    ~/.local/share/nvim:      'nvim-share'
    ~/.config/nvim:           'nvim-config'
- shell:
# if there aren't a whole bunch of plugins then install them..
  - COUNT="$(ls "${HOME}/.local/share/nvim/plugged/" | sort | wc -l)" ; if [ "$COUNT" -lt 10 ]; then echo "installing vim plugins" ; nvim +'PlugInstall --sync' +qa ; fi
